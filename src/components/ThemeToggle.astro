<div class="fixed top-4 right-4 flex items-center space-x-4 z-50">
  <!-- Selector de Idioma -->
  <button
    id="languageToggle"
    class="bg-white dark:bg-gray-800 text-gray-800 dark:text-white p-2 rounded-full shadow-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-all duration-300"
    aria-label="Cambiar idioma"
  >
    <svg
      class="w-6 h-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"
      />
    </svg>
  </button>

  <!-- Selector de Tema -->
  <button
    id="themeToggle"
    class="bg-white dark:bg-gray-800 text-gray-800 dark:text-white p-2 rounded-full shadow-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-all duration-300"
    aria-label="Cambiar tema"
  >
    <!-- Ícono de Sol -->
    <svg
      id="sunIcon"
      class="w-6 h-6 hidden dark:block"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
      />
    </svg>
    <!-- Ícono de Luna -->
    <svg
      id="moonIcon"
      class="w-6 h-6 block dark:hidden"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
      />
    </svg>
  </button>
</div>

<script>
  // Función para cambiar el tema
  function setTheme(theme) {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    localStorage.setItem('theme', theme);
  }

  // Función para cambiar el idioma
  function setLanguage(lang) {
    document.documentElement.lang = lang;
    localStorage.setItem('language', lang);
    // Aquí puedes agregar la lógica para cambiar los textos
    updateContent(lang);
  }

  // Función para actualizar el contenido según el idioma
  function updateContent(lang) {
    const translations = {
      es: {
        inicio: 'Inicio',
        servicios: 'Servicios',
        testimonios: 'Testimonios',
        contacto: 'Contacto',
        // Agrega más traducciones según necesites
      },
      en: {
        inicio: 'Home',
        servicios: 'Services',
        testimonios: 'Testimonials',
        contacto: 'Contact',
        // Agrega más traducciones según necesites
      }
    };

    // Actualizar textos según el idioma seleccionado
    Object.keys(translations[lang]).forEach(key => {
      const elements = document.querySelectorAll(`[data-translate="${key}"]`);
      elements.forEach(element => {
        element.textContent = translations[lang][key];
      });
    });
  }

  // Inicialización
  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.getElementById('themeToggle');
    const languageToggle = document.getElementById('languageToggle');
    
    // Cargar tema guardado
    const savedTheme = localStorage.getItem('theme') || 'light';
    setTheme(savedTheme);
    
    // Cargar idioma guardado
    const savedLanguage = localStorage.getItem('language') || 'es';
    setLanguage(savedLanguage);

    // Evento para cambiar tema
    themeToggle.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark');
      setTheme(isDark ? 'light' : 'dark');
    });

    // Evento para cambiar idioma
    languageToggle.addEventListener('click', () => {
      const currentLang = document.documentElement.lang;
      setLanguage(currentLang === 'es' ? 'en' : 'es');
    });
  });
</script> 